scalar JSON
scalar Long
scalar DateTime
@specifiedBy(url: "https://scalars.graphql.org/andimarek/date-time.html")
scalar UUID
@specifiedBy(url:"https://tools.ietf.org/html/rfc4122")

type Query {
    listFolder(request: ListFolderRequest!): [FolderElementInfo]
    documentById(id: UUID!): DocumentInfo
    count(request: ListFolderRequest): Long
}

type FolderElementInfo {
    id : UUID
    type : DocumentType
    contentType : String
    name : String
    metadata : JSON
    size : Long
    createdAt : DateTime
    updatedAt : DateTime
    createdBy : String
    updatedBy : String
}

type DocumentInfo {
    id : UUID
    parentId : UUID
    type : DocumentType
    contentType : String
    name : String
    metadata : JSON
    size : Long
    createdAt : DateTime
    updatedAt : DateTime
    createdBy : String
    updatedBy : String
}

"""
Filter Object used to list or count the content of a given folder
"""
input ListFolderRequest {
    "Id of the folder"
    id : UUID
    "Type (FILE or FOLDER) of the elements to filter"
    type : DocumentType
    "Content-Type of the files to filter"
    contentType : String
    "name of the elements to filter (exact match)"
    name : String
    "name of the elements to filter (like clause)"
    nameLike : String
    "metadata of the elements to filter (contains clause)"
    metadata : JSON
    size : Long
    createdAtAfter : DateTime
    createdAtBefore : DateTime
    updatedAtAfter : DateTime
    updatedAtBefore : DateTime
    createdBy : String
    updatedBy : String
    pageInfo : PageInfo
}

input PageInfo {
    pageNumber : Int!
    pageSize : Int!
    sortBy : String
    sortOrder : SortOrder
}

enum SortOrder {
    ASC, DESC
}

enum DocumentType {
    FILE, FOLDER
}

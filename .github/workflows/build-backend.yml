# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build Backend with Maven

on:
  push:
    branches: [ "develop" ]
    paths-ignore:
      - 'openfilz-web/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.RELEASE_CLIENT_ID }}
          private-key: ${{ secrets.RELEASE_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: maven

      - name: Configure Git Credentials
        run: |
          git config --global user.name "maven-release-bot[bot]"
          git config --global user.email "maven-release-bot[bot]@users.noreply.github.com"
          git config --global credential.helper store 
          echo "https://x-access-token:${{ steps.app-token.outputs.token }}@github.com" > ~/.git-credentials

      - uses: s4u/maven-settings-action@v3.1.0
        with:
          servers: |
            [{
              "id": "git",
              "username": "x-access-token",
              "password": "${{ steps.app-token.outputs.token }}"
            }]

      - name: Build with Maven
        run: mvn -B clean install --file pom.xml

      - name: Generate JaCoCo Badge
        id: jacoco-badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: >
            openfilz-api/target/jacoco/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branches = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit and push
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          cd .github/badges
          if [[ `git status --porcelain *.svg` ]]; then
            git add *.svg
            git commit -m "Autogenerated JaCoCo coverage badge" *.svg
            git push
          fi

      - name: Upload Report
        uses: 'actions/upload-artifact@v4'
        with:
          name: jacoco-report
          path: ${{ github.workspace }}/openfilz-api/target/jacoco

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.7.2
        with:
          paths: |
            ${{ github.workspace }}/openfilz-api/target/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60

      - name: Cleanup credentials
        if: always()
        run: |
          rm -f ~/.git-credentials
          git config --global --unset credential.helper || true
